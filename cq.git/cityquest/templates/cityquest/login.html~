{% extends 'cityquest/base.html' %}
{% load static %}

    <!-- Bootstrap -->
	{% block cssfiles %}
    <link href="{% static 'cityquest/css/bootstrap.min.css' %}" rel="stylesheet">
    <link href="{% static 'cityquest/css/login.css' %}" rel="stylesheet">
    
    <link type="text/css" rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500">

    <!--link rel="stylesheet" href="css/bootstrap-3.1.1.min.css" type="text/css"-->
	{% endblock %}


{% block content %}

    <div class = "container">
        <h1>CityQuest</h1>

        <form action="../eventlist" method="get">
            <div id="locationField">
                <input id="autocomplete" placeholder="Enter a city" type="text" name="location"></input>
            </div>

                <select class="form-control" name="category">
                    <option value="Business">Business</option>
                    <option value="Charity">Charity</option>
                    <option value="ClassesWorkshops">Classes & Workshops</option>
                    <option value="Conferences">Conferences</option>
                    <option value="Festivals">Festivals</option>
                    <option value="FoodDrinks">Food & Drinks</option>
                    <option value="MusicConcerts">Music & Concerts</option>
                    <option value="Networking">Networking</option>
                    <option value="Nightlife">Nightlife</option>
                    <option value="PerformingArts">Performing Arts</option>
                    <option value="ScienceTech">Science & Tech</option>
                    <option value="Spirituality">Spirituality</option>
                    <option value="Sports">Sports</option>
                    <option value="Other">Other</option>
                </select>
                <input type="hidden" name="lat" id="latitude">
                <input type="hidden" name="lon" id="longitude">

            <button type="submit"  class="btn btn-default btn-success btn-lg"><span class="glyphicon glyphicon-search"></span> Find nearby events</button>
        </form>
	<button  onclick="getGeo()">geocode</button>

    </div>
{% endblock %} 

{% block javascript %}
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=places"></script>


<script>
// This example displays an address form, using the autocomplete feature
// of the Google Places API to help users fill in the information.

var placeSearch, autocomplete;
var geocoder;
var componentForm = {
    street_number: 'short_name',
    route: 'long_name',
    locality: 'long_name',
    administrative_area_level_1: 'short_name',
    country: 'long_name',
    postal_code: 'short_name'
};

//gets the address and sets the hidden inputs to the lat and lon of that address
function getGeo(){
    var address = document.getElementById('autocomplete').value;
    geocoder.geocode( {'address' : address}, function(results, status){
      if (status == google.maps.GeocoderStatus.OK){
          document.getElementById('latitude').value = results[0].geometry.location.lat();
          document.getElementById('longitude').value = results[0].geometry.location.lng();
      } else {
        alert('That address is not valid because of: ' + status);
      }
    })
};

function initialize() {
  // Create the autocomplete object, restricting the search
  // to geographical location types.
    geocoder = new google.maps.Geocoder();
    autocomplete = new google.maps.places.Autocomplete(
      /** @type {HTMLInputElement} */(document.getElementById('autocomplete')),
      { types: ['geocode'] });
  // When the user selects an address from the dropdown,
  // populate the address fields in the form.
  google.maps.event.addListener(autocomplete, 'place_changed', function() {
      fillInAddress();
  });
}

// [START region_fillform]
function fillInAddress() {
  // Get the place details from the autocomplete object.
  var place = autocomplete.getPlace();

  for (var component in componentForm) {
    document.getElementById(component).value = '';
    document.getElementById(component).disabled = false;
  }

  // Get each component of the address from the place details
  // and fill the corresponding field on the form.
  for (var i = 0; i < place.address_components.length; i++) {
    var addressType = place.address_components[i].types[0];
    if (componentForm[addressType]) {
      var val = place.address_components[i][componentForm[addressType]];
      document.getElementById(addressType).value = val;
    }
  }
}
// [END region_fillform]

// [START region_geolocation]
// Bias the autocomplete object to the user's geographical location,
// as supplied by the browser's 'navigator.geolocation' object.
function geolocate() {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var geolocation = new google.maps.LatLng(
          position.coords.latitude, position.coords.longitude);
      autocomplete.setBounds(new google.maps.LatLngBounds(geolocation,
          geolocation));
    });
  }
}
// [END region_geolocation]

    </script>
   	
{% endblock %}

